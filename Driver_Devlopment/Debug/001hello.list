
001hello.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001a8  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         000003a8  080001a8  080001a8  000101a8  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000550  08000558  00010558  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000550  08000550  00010558  2**0
                  CONTENTS
  4 .ARM          00000000  08000550  08000550  00010558  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000550  08000558  00010558  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000550  08000550  00010550  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08000554  08000554  00010554  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000000  20000000  20000000  00010558  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000001c  20000000  08000558  00020000  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000001c  08000558  0002001c  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00010558  2**0
                  CONTENTS, READONLY
 12 .debug_info   00000789  00000000  00000000  00010588  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 000001ee  00000000  00000000  00010d11  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000000a8  00000000  00000000  00010f00  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000080  00000000  00000000  00010fa8  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  000011b3  00000000  00000000  00011028  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0000095e  00000000  00000000  000121db  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    000047fd  00000000  00000000  00012b39  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  00017336  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000001d4  00000000  00000000  000173b4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a8 <__do_global_dtors_aux>:
 80001a8:	b510      	push	{r4, lr}
 80001aa:	4c05      	ldr	r4, [pc, #20]	; (80001c0 <__do_global_dtors_aux+0x18>)
 80001ac:	7823      	ldrb	r3, [r4, #0]
 80001ae:	b933      	cbnz	r3, 80001be <__do_global_dtors_aux+0x16>
 80001b0:	4b04      	ldr	r3, [pc, #16]	; (80001c4 <__do_global_dtors_aux+0x1c>)
 80001b2:	b113      	cbz	r3, 80001ba <__do_global_dtors_aux+0x12>
 80001b4:	4804      	ldr	r0, [pc, #16]	; (80001c8 <__do_global_dtors_aux+0x20>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	2301      	movs	r3, #1
 80001bc:	7023      	strb	r3, [r4, #0]
 80001be:	bd10      	pop	{r4, pc}
 80001c0:	20000000 	.word	0x20000000
 80001c4:	00000000 	.word	0x00000000
 80001c8:	08000538 	.word	0x08000538

080001cc <frame_dummy>:
 80001cc:	b508      	push	{r3, lr}
 80001ce:	4b03      	ldr	r3, [pc, #12]	; (80001dc <frame_dummy+0x10>)
 80001d0:	b11b      	cbz	r3, 80001da <frame_dummy+0xe>
 80001d2:	4903      	ldr	r1, [pc, #12]	; (80001e0 <frame_dummy+0x14>)
 80001d4:	4803      	ldr	r0, [pc, #12]	; (80001e4 <frame_dummy+0x18>)
 80001d6:	f3af 8000 	nop.w
 80001da:	bd08      	pop	{r3, pc}
 80001dc:	00000000 	.word	0x00000000
 80001e0:	20000004 	.word	0x20000004
 80001e4:	08000538 	.word	0x08000538

080001e8 <delay>:
 */

#include "stm32f4xx.h"
#include "stm32f407xx_gpio_driver.h"

void delay(){
 80001e8:	b480      	push	{r7}
 80001ea:	b083      	sub	sp, #12
 80001ec:	af00      	add	r7, sp, #0

	for(uint32_t i =0; i<1000000u; i++){
 80001ee:	2300      	movs	r3, #0
 80001f0:	607b      	str	r3, [r7, #4]
 80001f2:	e002      	b.n	80001fa <delay+0x12>
 80001f4:	687b      	ldr	r3, [r7, #4]
 80001f6:	3301      	adds	r3, #1
 80001f8:	607b      	str	r3, [r7, #4]
 80001fa:	687b      	ldr	r3, [r7, #4]
 80001fc:	4a04      	ldr	r2, [pc, #16]	; (8000210 <delay+0x28>)
 80001fe:	4293      	cmp	r3, r2
 8000200:	d9f8      	bls.n	80001f4 <delay+0xc>


	}
}
 8000202:	bf00      	nop
 8000204:	370c      	adds	r7, #12
 8000206:	46bd      	mov	sp, r7
 8000208:	f85d 7b04 	ldr.w	r7, [sp], #4
 800020c:	4770      	bx	lr
 800020e:	bf00      	nop
 8000210:	000f423f 	.word	0x000f423f

08000214 <main>:



int main(void){
 8000214:	b580      	push	{r7, lr}
 8000216:	b084      	sub	sp, #16
 8000218:	af00      	add	r7, sp, #0

	GPIO_Handle_t GpioLed;
	GpioLed.pGPIOx = GPIOD;
 800021a:	4b0d      	ldr	r3, [pc, #52]	; (8000250 <main+0x3c>)
 800021c:	607b      	str	r3, [r7, #4]

	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 800021e:	230c      	movs	r3, #12
 8000220:	723b      	strb	r3, [r7, #8]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 8000222:	2301      	movs	r3, #1
 8000224:	727b      	strb	r3, [r7, #9]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000226:	2302      	movs	r3, #2
 8000228:	72bb      	strb	r3, [r7, #10]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControlr = GPIO_NO_PD;
 800022a:	2302      	movs	r3, #2
 800022c:	72fb      	strb	r3, [r7, #11]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 800022e:	2300      	movs	r3, #0
 8000230:	733b      	strb	r3, [r7, #12]

	GPIO_PeriClockControl(GPIOD, ENABLE);
 8000232:	2101      	movs	r1, #1
 8000234:	4806      	ldr	r0, [pc, #24]	; (8000250 <main+0x3c>)
 8000236:	f000 f837 	bl	80002a8 <GPIO_PeriClockControl>
	GPIO_Init(&GpioLed);
 800023a:	1d3b      	adds	r3, r7, #4
 800023c:	4618      	mov	r0, r3
 800023e:	f000 f881 	bl	8000344 <GPIO_Init>

	while(1){

	GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_12);
 8000242:	210c      	movs	r1, #12
 8000244:	4802      	ldr	r0, [pc, #8]	; (8000250 <main+0x3c>)
 8000246:	f000 f93d 	bl	80004c4 <GPIO_ToggleOutputPin>
	delay();
 800024a:	f7ff ffcd 	bl	80001e8 <delay>
	GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_12);
 800024e:	e7f8      	b.n	8000242 <main+0x2e>
 8000250:	40020c00 	.word	0x40020c00

08000254 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000254:	480d      	ldr	r0, [pc, #52]	; (800028c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000256:	4685      	mov	sp, r0
/* Call the clock system intitialization function.*/
  bl  SystemInit
 8000258:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800025c:	480c      	ldr	r0, [pc, #48]	; (8000290 <LoopForever+0x6>)
  ldr r1, =_edata
 800025e:	490d      	ldr	r1, [pc, #52]	; (8000294 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000260:	4a0d      	ldr	r2, [pc, #52]	; (8000298 <LoopForever+0xe>)
  movs r3, #0
 8000262:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000264:	e002      	b.n	800026c <LoopCopyDataInit>

08000266 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000266:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000268:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800026a:	3304      	adds	r3, #4

0800026c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800026c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800026e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000270:	d3f9      	bcc.n	8000266 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000272:	4a0a      	ldr	r2, [pc, #40]	; (800029c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000274:	4c0a      	ldr	r4, [pc, #40]	; (80002a0 <LoopForever+0x16>)
  movs r3, #0
 8000276:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000278:	e001      	b.n	800027e <LoopFillZerobss>

0800027a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800027a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800027c:	3204      	adds	r2, #4

0800027e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800027e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000280:	d3fb      	bcc.n	800027a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000282:	f000 f935 	bl	80004f0 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000286:	f7ff ffc5 	bl	8000214 <main>

0800028a <LoopForever>:

LoopForever:
    b LoopForever
 800028a:	e7fe      	b.n	800028a <LoopForever>
  ldr   r0, =_estack
 800028c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000290:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000294:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000298:	08000558 	.word	0x08000558
  ldr r2, =_sbss
 800029c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 80002a0:	2000001c 	.word	0x2000001c

080002a4 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 80002a4:	e7fe      	b.n	80002a4 <ADC_IRQHandler>
	...

080002a8 <GPIO_PeriClockControl>:
#include "stm32f407xx_gpio_driver.h"

void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi){
 80002a8:	b480      	push	{r7}
 80002aa:	b083      	sub	sp, #12
 80002ac:	af00      	add	r7, sp, #0
 80002ae:	6078      	str	r0, [r7, #4]
 80002b0:	460b      	mov	r3, r1
 80002b2:	70fb      	strb	r3, [r7, #3]

	if(pGPIOx == GPIOA){
 80002b4:	687b      	ldr	r3, [r7, #4]
 80002b6:	4a1d      	ldr	r2, [pc, #116]	; (800032c <GPIO_PeriClockControl+0x84>)
 80002b8:	4293      	cmp	r3, r2
 80002ba:	d106      	bne.n	80002ca <GPIO_PeriClockControl+0x22>

		GPIOA_PCLOCK_EN();
 80002bc:	4b1c      	ldr	r3, [pc, #112]	; (8000330 <GPIO_PeriClockControl+0x88>)
 80002be:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002c0:	4a1b      	ldr	r2, [pc, #108]	; (8000330 <GPIO_PeriClockControl+0x88>)
 80002c2:	f043 0301 	orr.w	r3, r3, #1
 80002c6:	6313      	str	r3, [r2, #48]	; 0x30
	}else if(pGPIOx == GPIOE){

		GPIOE_PCLOCK_EN();
	}

}
 80002c8:	e02a      	b.n	8000320 <GPIO_PeriClockControl+0x78>
	}else if(pGPIOx == GPIOB){
 80002ca:	687b      	ldr	r3, [r7, #4]
 80002cc:	4a19      	ldr	r2, [pc, #100]	; (8000334 <GPIO_PeriClockControl+0x8c>)
 80002ce:	4293      	cmp	r3, r2
 80002d0:	d106      	bne.n	80002e0 <GPIO_PeriClockControl+0x38>
		GPIOB_PCLOCK_EN();
 80002d2:	4b17      	ldr	r3, [pc, #92]	; (8000330 <GPIO_PeriClockControl+0x88>)
 80002d4:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002d6:	4a16      	ldr	r2, [pc, #88]	; (8000330 <GPIO_PeriClockControl+0x88>)
 80002d8:	f043 0302 	orr.w	r3, r3, #2
 80002dc:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002de:	e01f      	b.n	8000320 <GPIO_PeriClockControl+0x78>
	}else if(pGPIOx == GPIOC){
 80002e0:	687b      	ldr	r3, [r7, #4]
 80002e2:	4a15      	ldr	r2, [pc, #84]	; (8000338 <GPIO_PeriClockControl+0x90>)
 80002e4:	4293      	cmp	r3, r2
 80002e6:	d106      	bne.n	80002f6 <GPIO_PeriClockControl+0x4e>
		GPIOC_PCLOCK_EN();
 80002e8:	4b11      	ldr	r3, [pc, #68]	; (8000330 <GPIO_PeriClockControl+0x88>)
 80002ea:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 80002ec:	4a10      	ldr	r2, [pc, #64]	; (8000330 <GPIO_PeriClockControl+0x88>)
 80002ee:	f043 0304 	orr.w	r3, r3, #4
 80002f2:	6313      	str	r3, [r2, #48]	; 0x30
}
 80002f4:	e014      	b.n	8000320 <GPIO_PeriClockControl+0x78>
	}else if(pGPIOx == GPIOD){
 80002f6:	687b      	ldr	r3, [r7, #4]
 80002f8:	4a10      	ldr	r2, [pc, #64]	; (800033c <GPIO_PeriClockControl+0x94>)
 80002fa:	4293      	cmp	r3, r2
 80002fc:	d106      	bne.n	800030c <GPIO_PeriClockControl+0x64>
		GPIOD_PCLOCK_EN();
 80002fe:	4b0c      	ldr	r3, [pc, #48]	; (8000330 <GPIO_PeriClockControl+0x88>)
 8000300:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000302:	4a0b      	ldr	r2, [pc, #44]	; (8000330 <GPIO_PeriClockControl+0x88>)
 8000304:	f043 0308 	orr.w	r3, r3, #8
 8000308:	6313      	str	r3, [r2, #48]	; 0x30
}
 800030a:	e009      	b.n	8000320 <GPIO_PeriClockControl+0x78>
	}else if(pGPIOx == GPIOE){
 800030c:	687b      	ldr	r3, [r7, #4]
 800030e:	4a0c      	ldr	r2, [pc, #48]	; (8000340 <GPIO_PeriClockControl+0x98>)
 8000310:	4293      	cmp	r3, r2
 8000312:	d105      	bne.n	8000320 <GPIO_PeriClockControl+0x78>
		GPIOE_PCLOCK_EN();
 8000314:	4b06      	ldr	r3, [pc, #24]	; (8000330 <GPIO_PeriClockControl+0x88>)
 8000316:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8000318:	4a05      	ldr	r2, [pc, #20]	; (8000330 <GPIO_PeriClockControl+0x88>)
 800031a:	f043 0310 	orr.w	r3, r3, #16
 800031e:	6313      	str	r3, [r2, #48]	; 0x30
}
 8000320:	bf00      	nop
 8000322:	370c      	adds	r7, #12
 8000324:	46bd      	mov	sp, r7
 8000326:	f85d 7b04 	ldr.w	r7, [sp], #4
 800032a:	4770      	bx	lr
 800032c:	40020000 	.word	0x40020000
 8000330:	40023800 	.word	0x40023800
 8000334:	40020400 	.word	0x40020400
 8000338:	40020800 	.word	0x40020800
 800033c:	40020c00 	.word	0x40020c00
 8000340:	40021000 	.word	0x40021000

08000344 <GPIO_Init>:

/*
 *  to initialize the GPIOxx
 */
void GPIO_Init(GPIO_Handle_t* pGPIOHandle){
 8000344:	b480      	push	{r7}
 8000346:	b085      	sub	sp, #20
 8000348:	af00      	add	r7, sp, #0
 800034a:	6078      	str	r0, [r7, #4]

	// 1. Configuration of pin mode of GPIOx
	uint32_t temp=0;
 800034c:	2300      	movs	r3, #0
 800034e:	60fb      	str	r3, [r7, #12]
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000350:	687b      	ldr	r3, [r7, #4]
 8000352:	795b      	ldrb	r3, [r3, #5]
 8000354:	461a      	mov	r2, r3
 8000356:	687b      	ldr	r3, [r7, #4]
 8000358:	791b      	ldrb	r3, [r3, #4]
 800035a:	005b      	lsls	r3, r3, #1
 800035c:	fa02 f303 	lsl.w	r3, r2, r3
 8000360:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->MODER &=~(0x03 << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000362:	687b      	ldr	r3, [r7, #4]
 8000364:	681b      	ldr	r3, [r3, #0]
 8000366:	681a      	ldr	r2, [r3, #0]
 8000368:	687b      	ldr	r3, [r7, #4]
 800036a:	791b      	ldrb	r3, [r3, #4]
 800036c:	005b      	lsls	r3, r3, #1
 800036e:	2103      	movs	r1, #3
 8000370:	fa01 f303 	lsl.w	r3, r1, r3
 8000374:	43db      	mvns	r3, r3
 8000376:	4619      	mov	r1, r3
 8000378:	687b      	ldr	r3, [r7, #4]
 800037a:	681b      	ldr	r3, [r3, #0]
 800037c:	400a      	ands	r2, r1
 800037e:	601a      	str	r2, [r3, #0]
	pGPIOHandle->pGPIOx->MODER |= temp;
 8000380:	687b      	ldr	r3, [r7, #4]
 8000382:	681b      	ldr	r3, [r3, #0]
 8000384:	6819      	ldr	r1, [r3, #0]
 8000386:	687b      	ldr	r3, [r7, #4]
 8000388:	681b      	ldr	r3, [r3, #0]
 800038a:	68fa      	ldr	r2, [r7, #12]
 800038c:	430a      	orrs	r2, r1
 800038e:	601a      	str	r2, [r3, #0]

	// 2. Configuration of speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000390:	687b      	ldr	r3, [r7, #4]
 8000392:	799b      	ldrb	r3, [r3, #6]
 8000394:	461a      	mov	r2, r3
 8000396:	687b      	ldr	r3, [r7, #4]
 8000398:	791b      	ldrb	r3, [r3, #4]
 800039a:	005b      	lsls	r3, r3, #1
 800039c:	fa02 f303 	lsl.w	r3, r2, r3
 80003a0:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OSPEEDR &=~(0x03<<(2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80003a2:	687b      	ldr	r3, [r7, #4]
 80003a4:	681b      	ldr	r3, [r3, #0]
 80003a6:	689a      	ldr	r2, [r3, #8]
 80003a8:	687b      	ldr	r3, [r7, #4]
 80003aa:	791b      	ldrb	r3, [r3, #4]
 80003ac:	005b      	lsls	r3, r3, #1
 80003ae:	2103      	movs	r1, #3
 80003b0:	fa01 f303 	lsl.w	r3, r1, r3
 80003b4:	43db      	mvns	r3, r3
 80003b6:	4619      	mov	r1, r3
 80003b8:	687b      	ldr	r3, [r7, #4]
 80003ba:	681b      	ldr	r3, [r3, #0]
 80003bc:	400a      	ands	r2, r1
 80003be:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR|= temp;
 80003c0:	687b      	ldr	r3, [r7, #4]
 80003c2:	681b      	ldr	r3, [r3, #0]
 80003c4:	6899      	ldr	r1, [r3, #8]
 80003c6:	687b      	ldr	r3, [r7, #4]
 80003c8:	681b      	ldr	r3, [r3, #0]
 80003ca:	68fa      	ldr	r2, [r7, #12]
 80003cc:	430a      	orrs	r2, r1
 80003ce:	609a      	str	r2, [r3, #8]

	// 3. configuration of pull-up and pull-down

	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControlr << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80003d0:	687b      	ldr	r3, [r7, #4]
 80003d2:	79db      	ldrb	r3, [r3, #7]
 80003d4:	461a      	mov	r2, r3
 80003d6:	687b      	ldr	r3, [r7, #4]
 80003d8:	791b      	ldrb	r3, [r3, #4]
 80003da:	005b      	lsls	r3, r3, #1
 80003dc:	fa02 f303 	lsl.w	r3, r2, r3
 80003e0:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->PUPDR &=~(0x03 << (2*pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80003e2:	687b      	ldr	r3, [r7, #4]
 80003e4:	681b      	ldr	r3, [r3, #0]
 80003e6:	68da      	ldr	r2, [r3, #12]
 80003e8:	687b      	ldr	r3, [r7, #4]
 80003ea:	791b      	ldrb	r3, [r3, #4]
 80003ec:	005b      	lsls	r3, r3, #1
 80003ee:	2103      	movs	r1, #3
 80003f0:	fa01 f303 	lsl.w	r3, r1, r3
 80003f4:	43db      	mvns	r3, r3
 80003f6:	4619      	mov	r1, r3
 80003f8:	687b      	ldr	r3, [r7, #4]
 80003fa:	681b      	ldr	r3, [r3, #0]
 80003fc:	400a      	ands	r2, r1
 80003fe:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR|= temp;
 8000400:	687b      	ldr	r3, [r7, #4]
 8000402:	681b      	ldr	r3, [r3, #0]
 8000404:	68d9      	ldr	r1, [r3, #12]
 8000406:	687b      	ldr	r3, [r7, #4]
 8000408:	681b      	ldr	r3, [r3, #0]
 800040a:	68fa      	ldr	r2, [r7, #12]
 800040c:	430a      	orrs	r2, r1
 800040e:	60da      	str	r2, [r3, #12]

	//4. GPIO port input data register
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000410:	687b      	ldr	r3, [r7, #4]
 8000412:	7a1b      	ldrb	r3, [r3, #8]
 8000414:	461a      	mov	r2, r3
 8000416:	687b      	ldr	r3, [r7, #4]
 8000418:	791b      	ldrb	r3, [r3, #4]
 800041a:	fa02 f303 	lsl.w	r3, r2, r3
 800041e:	60fb      	str	r3, [r7, #12]
	pGPIOHandle->pGPIOx->OTYPER &=~(0x1 << (pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000420:	687b      	ldr	r3, [r7, #4]
 8000422:	681b      	ldr	r3, [r3, #0]
 8000424:	685a      	ldr	r2, [r3, #4]
 8000426:	687b      	ldr	r3, [r7, #4]
 8000428:	791b      	ldrb	r3, [r3, #4]
 800042a:	4619      	mov	r1, r3
 800042c:	2301      	movs	r3, #1
 800042e:	408b      	lsls	r3, r1
 8000430:	43db      	mvns	r3, r3
 8000432:	4619      	mov	r1, r3
 8000434:	687b      	ldr	r3, [r7, #4]
 8000436:	681b      	ldr	r3, [r3, #0]
 8000438:	400a      	ands	r2, r1
 800043a:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER|= temp;
 800043c:	687b      	ldr	r3, [r7, #4]
 800043e:	681b      	ldr	r3, [r3, #0]
 8000440:	6859      	ldr	r1, [r3, #4]
 8000442:	687b      	ldr	r3, [r7, #4]
 8000444:	681b      	ldr	r3, [r3, #0]
 8000446:	68fa      	ldr	r2, [r7, #12]
 8000448:	430a      	orrs	r2, r1
 800044a:	605a      	str	r2, [r3, #4]

	//5. GPIO alternate function low register
	if (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN){
 800044c:	687b      	ldr	r3, [r7, #4]
 800044e:	795b      	ldrb	r3, [r3, #5]
 8000450:	2b02      	cmp	r3, #2
 8000452:	d131      	bne.n	80004b8 <GPIO_Init+0x174>

		uint8_t temp1,temp2;

			temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber/8;
 8000454:	687b      	ldr	r3, [r7, #4]
 8000456:	791b      	ldrb	r3, [r3, #4]
 8000458:	08db      	lsrs	r3, r3, #3
 800045a:	72fb      	strb	r3, [r7, #11]
			temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber%8;
 800045c:	687b      	ldr	r3, [r7, #4]
 800045e:	791b      	ldrb	r3, [r3, #4]
 8000460:	f003 0307 	and.w	r3, r3, #7
 8000464:	72bb      	strb	r3, [r7, #10]
			pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xf << (4*temp2));
 8000466:	687b      	ldr	r3, [r7, #4]
 8000468:	681b      	ldr	r3, [r3, #0]
 800046a:	7afa      	ldrb	r2, [r7, #11]
 800046c:	3208      	adds	r2, #8
 800046e:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 8000472:	7abb      	ldrb	r3, [r7, #10]
 8000474:	009b      	lsls	r3, r3, #2
 8000476:	220f      	movs	r2, #15
 8000478:	fa02 f303 	lsl.w	r3, r2, r3
 800047c:	43db      	mvns	r3, r3
 800047e:	4618      	mov	r0, r3
 8000480:	687b      	ldr	r3, [r7, #4]
 8000482:	681b      	ldr	r3, [r3, #0]
 8000484:	7afa      	ldrb	r2, [r7, #11]
 8000486:	4001      	ands	r1, r0
 8000488:	3208      	adds	r2, #8
 800048a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
			pGPIOHandle->pGPIOx->AFR[temp1] |= pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFuncMode << (4*temp2);
 800048e:	687b      	ldr	r3, [r7, #4]
 8000490:	681b      	ldr	r3, [r3, #0]
 8000492:	7afa      	ldrb	r2, [r7, #11]
 8000494:	3208      	adds	r2, #8
 8000496:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 800049a:	687b      	ldr	r3, [r7, #4]
 800049c:	7a5b      	ldrb	r3, [r3, #9]
 800049e:	461a      	mov	r2, r3
 80004a0:	7abb      	ldrb	r3, [r7, #10]
 80004a2:	009b      	lsls	r3, r3, #2
 80004a4:	fa02 f303 	lsl.w	r3, r2, r3
 80004a8:	4618      	mov	r0, r3
 80004aa:	687b      	ldr	r3, [r7, #4]
 80004ac:	681b      	ldr	r3, [r3, #0]
 80004ae:	7afa      	ldrb	r2, [r7, #11]
 80004b0:	4301      	orrs	r1, r0
 80004b2:	3208      	adds	r2, #8
 80004b4:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}


}
 80004b8:	bf00      	nop
 80004ba:	3714      	adds	r7, #20
 80004bc:	46bd      	mov	sp, r7
 80004be:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004c2:	4770      	bx	lr

080004c4 <GPIO_ToggleOutputPin>:
}

/*
 *  to Toggle the output pin
 */
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber ){
 80004c4:	b480      	push	{r7}
 80004c6:	b083      	sub	sp, #12
 80004c8:	af00      	add	r7, sp, #0
 80004ca:	6078      	str	r0, [r7, #4]
 80004cc:	460b      	mov	r3, r1
 80004ce:	70fb      	strb	r3, [r7, #3]

	pGPIOx->ODRR ^= (1<<PinNumber);
 80004d0:	687b      	ldr	r3, [r7, #4]
 80004d2:	695b      	ldr	r3, [r3, #20]
 80004d4:	78fa      	ldrb	r2, [r7, #3]
 80004d6:	2101      	movs	r1, #1
 80004d8:	fa01 f202 	lsl.w	r2, r1, r2
 80004dc:	405a      	eors	r2, r3
 80004de:	687b      	ldr	r3, [r7, #4]
 80004e0:	615a      	str	r2, [r3, #20]

}
 80004e2:	bf00      	nop
 80004e4:	370c      	adds	r7, #12
 80004e6:	46bd      	mov	sp, r7
 80004e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004ec:	4770      	bx	lr
	...

080004f0 <__libc_init_array>:
 80004f0:	b570      	push	{r4, r5, r6, lr}
 80004f2:	4e0d      	ldr	r6, [pc, #52]	; (8000528 <__libc_init_array+0x38>)
 80004f4:	4c0d      	ldr	r4, [pc, #52]	; (800052c <__libc_init_array+0x3c>)
 80004f6:	1ba4      	subs	r4, r4, r6
 80004f8:	10a4      	asrs	r4, r4, #2
 80004fa:	2500      	movs	r5, #0
 80004fc:	42a5      	cmp	r5, r4
 80004fe:	d109      	bne.n	8000514 <__libc_init_array+0x24>
 8000500:	4e0b      	ldr	r6, [pc, #44]	; (8000530 <__libc_init_array+0x40>)
 8000502:	4c0c      	ldr	r4, [pc, #48]	; (8000534 <__libc_init_array+0x44>)
 8000504:	f000 f818 	bl	8000538 <_init>
 8000508:	1ba4      	subs	r4, r4, r6
 800050a:	10a4      	asrs	r4, r4, #2
 800050c:	2500      	movs	r5, #0
 800050e:	42a5      	cmp	r5, r4
 8000510:	d105      	bne.n	800051e <__libc_init_array+0x2e>
 8000512:	bd70      	pop	{r4, r5, r6, pc}
 8000514:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000518:	4798      	blx	r3
 800051a:	3501      	adds	r5, #1
 800051c:	e7ee      	b.n	80004fc <__libc_init_array+0xc>
 800051e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8000522:	4798      	blx	r3
 8000524:	3501      	adds	r5, #1
 8000526:	e7f2      	b.n	800050e <__libc_init_array+0x1e>
 8000528:	08000550 	.word	0x08000550
 800052c:	08000550 	.word	0x08000550
 8000530:	08000550 	.word	0x08000550
 8000534:	08000554 	.word	0x08000554

08000538 <_init>:
 8000538:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800053a:	bf00      	nop
 800053c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800053e:	bc08      	pop	{r3}
 8000540:	469e      	mov	lr, r3
 8000542:	4770      	bx	lr

08000544 <_fini>:
 8000544:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000546:	bf00      	nop
 8000548:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800054a:	bc08      	pop	{r3}
 800054c:	469e      	mov	lr, r3
 800054e:	4770      	bx	lr
